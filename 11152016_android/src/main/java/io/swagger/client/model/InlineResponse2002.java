/**
 * This is a demo API
 * API to control the Tesla Model S
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package io.swagger.client.model;

import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class InlineResponse2002 {
  
  @SerializedName("driver_temp_setting")
  private Double driverTempSetting = null;
  @SerializedName("is_rear_defroster_on")
  private Boolean isRearDefrosterOn = null;
  @SerializedName("is_auto_conditioning_on")
  private Boolean isAutoConditioningOn = null;
  @SerializedName("outside_temp")
  private Double outsideTemp = null;
  @SerializedName("inside_temp")
  private Double insideTemp = null;
  @SerializedName("passenger_temp_setting")
  private Double passengerTempSetting = null;
  @SerializedName("fan_status")
  private Integer fanStatus = null;
  @SerializedName("is_front_defroster_on")
  private Boolean isFrontDefrosterOn = null;

  /**
   * degC of driver temperature setpoint
   **/
  @ApiModelProperty(value = "degC of driver temperature setpoint")
  public Double getDriverTempSetting() {
    return driverTempSetting;
  }
  public void setDriverTempSetting(Double driverTempSetting) {
    this.driverTempSetting = driverTempSetting;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Boolean getIsRearDefrosterOn() {
    return isRearDefrosterOn;
  }
  public void setIsRearDefrosterOn(Boolean isRearDefrosterOn) {
    this.isRearDefrosterOn = isRearDefrosterOn;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Boolean getIsAutoConditioningOn() {
    return isAutoConditioningOn;
  }
  public void setIsAutoConditioningOn(Boolean isAutoConditioningOn) {
    this.isAutoConditioningOn = isAutoConditioningOn;
  }

  /**
   * degC outside car or null
   **/
  @ApiModelProperty(value = "degC outside car or null")
  public Double getOutsideTemp() {
    return outsideTemp;
  }
  public void setOutsideTemp(Double outsideTemp) {
    this.outsideTemp = outsideTemp;
  }

  /**
   * degC inside car
   **/
  @ApiModelProperty(value = "degC inside car")
  public Double getInsideTemp() {
    return insideTemp;
  }
  public void setInsideTemp(Double insideTemp) {
    this.insideTemp = insideTemp;
  }

  /**
   * degC of passenger temperature setpoint
   **/
  @ApiModelProperty(value = "degC of passenger temperature setpoint")
  public Double getPassengerTempSetting() {
    return passengerTempSetting;
  }
  public void setPassengerTempSetting(Double passengerTempSetting) {
    this.passengerTempSetting = passengerTempSetting;
  }

  /**
   * fan speed 0-6 or null
   **/
  @ApiModelProperty(value = "fan speed 0-6 or null")
  public Integer getFanStatus() {
    return fanStatus;
  }
  public void setFanStatus(Integer fanStatus) {
    this.fanStatus = fanStatus;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Boolean getIsFrontDefrosterOn() {
    return isFrontDefrosterOn;
  }
  public void setIsFrontDefrosterOn(Boolean isFrontDefrosterOn) {
    this.isFrontDefrosterOn = isFrontDefrosterOn;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InlineResponse2002 inlineResponse2002 = (InlineResponse2002) o;
    return (this.driverTempSetting == null ? inlineResponse2002.driverTempSetting == null : this.driverTempSetting.equals(inlineResponse2002.driverTempSetting)) &&
        (this.isRearDefrosterOn == null ? inlineResponse2002.isRearDefrosterOn == null : this.isRearDefrosterOn.equals(inlineResponse2002.isRearDefrosterOn)) &&
        (this.isAutoConditioningOn == null ? inlineResponse2002.isAutoConditioningOn == null : this.isAutoConditioningOn.equals(inlineResponse2002.isAutoConditioningOn)) &&
        (this.outsideTemp == null ? inlineResponse2002.outsideTemp == null : this.outsideTemp.equals(inlineResponse2002.outsideTemp)) &&
        (this.insideTemp == null ? inlineResponse2002.insideTemp == null : this.insideTemp.equals(inlineResponse2002.insideTemp)) &&
        (this.passengerTempSetting == null ? inlineResponse2002.passengerTempSetting == null : this.passengerTempSetting.equals(inlineResponse2002.passengerTempSetting)) &&
        (this.fanStatus == null ? inlineResponse2002.fanStatus == null : this.fanStatus.equals(inlineResponse2002.fanStatus)) &&
        (this.isFrontDefrosterOn == null ? inlineResponse2002.isFrontDefrosterOn == null : this.isFrontDefrosterOn.equals(inlineResponse2002.isFrontDefrosterOn));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.driverTempSetting == null ? 0: this.driverTempSetting.hashCode());
    result = 31 * result + (this.isRearDefrosterOn == null ? 0: this.isRearDefrosterOn.hashCode());
    result = 31 * result + (this.isAutoConditioningOn == null ? 0: this.isAutoConditioningOn.hashCode());
    result = 31 * result + (this.outsideTemp == null ? 0: this.outsideTemp.hashCode());
    result = 31 * result + (this.insideTemp == null ? 0: this.insideTemp.hashCode());
    result = 31 * result + (this.passengerTempSetting == null ? 0: this.passengerTempSetting.hashCode());
    result = 31 * result + (this.fanStatus == null ? 0: this.fanStatus.hashCode());
    result = 31 * result + (this.isFrontDefrosterOn == null ? 0: this.isFrontDefrosterOn.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class InlineResponse2002 {\n");
    
    sb.append("  driverTempSetting: ").append(driverTempSetting).append("\n");
    sb.append("  isRearDefrosterOn: ").append(isRearDefrosterOn).append("\n");
    sb.append("  isAutoConditioningOn: ").append(isAutoConditioningOn).append("\n");
    sb.append("  outsideTemp: ").append(outsideTemp).append("\n");
    sb.append("  insideTemp: ").append(insideTemp).append("\n");
    sb.append("  passengerTempSetting: ").append(passengerTempSetting).append("\n");
    sb.append("  fanStatus: ").append(fanStatus).append("\n");
    sb.append("  isFrontDefrosterOn: ").append(isFrontDefrosterOn).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
